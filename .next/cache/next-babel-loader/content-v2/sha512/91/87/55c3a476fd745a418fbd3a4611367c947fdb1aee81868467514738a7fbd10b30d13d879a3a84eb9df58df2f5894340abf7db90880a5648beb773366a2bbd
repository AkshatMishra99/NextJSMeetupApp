{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zedith9903/Projects/practice/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nconst DetailPage = props => {\n  // const details = ;\n  const {\n    meetup\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    id: meetup.id,\n    title: meetup.title,\n    description: meetup.description,\n    address: meetup.address,\n    image: meetup.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://zedith9903:milestone0903@cluster0.bcm0h.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupID: meetup._id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ctx => {\n  // console.log(ctx.params.meetupID);\n  const meetupID = ctx.params.meetupID;\n  const client = await MongoClient.connect(\"mongodb+srv://zedith9903:milestone0903@cluster0.bcm0h.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = meetupsCollection.findOne({\n    _id: meetupID\n  });\n  const {\n    _id,\n    title,\n    image,\n    address\n  } = meetup;\n  return {\n    props: {\n      meetup: {\n        id: _id.toString(),\n        title,\n        image,\n        address,\n        description\n      }\n    }\n  };\n};\nexport default DetailPage;","map":{"version":3,"sources":["/home/zedith9903/Projects/practice/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID]/index.js"],"names":["MongoClient","MeetupDetails","DetailPage","props","meetup","id","title","description","address","image","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","paths","map","params","meetupID","_id","toString","fallback","getStaticProps","ctx","findOne"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,sBACC,QAAC,aAAD;AACC,IAAA,EAAE,EAAEC,MAAM,CAACC,EADZ;AAEC,IAAA,KAAK,EAAED,MAAM,CAACE,KAFf;AAGC,IAAA,WAAW,EAAEF,MAAM,CAACG,WAHrB;AAIC,IAAA,OAAO,EAAEH,MAAM,CAACI,OAJjB;AAKC,IAAA,KAAK,EAAEJ,MAAM,CAACK;AALf;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAZD;;AAaA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACpB,uGADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAahB,MAAD,KAAa;AACtCiB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAElB,MAAM,CAACmB,GAAP,CAAWC,QAAX;AAAZ;AAD8B,GAAb,CAAZ,CAAd;AAGA,SAAO;AACNL,IAAAA,KADM;AAENM,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA,CAdM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe;AAC5C;AACA,QAAML,QAAQ,GAAGK,GAAG,CAACN,MAAJ,CAAWC,QAA5B;AACA,QAAMX,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACpB,uGADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMX,MAAM,GAAGU,iBAAiB,CAACc,OAAlB,CAA0B;AAAEL,IAAAA,GAAG,EAAED;AAAP,GAA1B,CAAf;AAEA,QAAM;AAAEC,IAAAA,GAAF;AAAOjB,IAAAA,KAAP;AAAcG,IAAAA,KAAd;AAAqBD,IAAAA;AAArB,MAAiCJ,MAAvC;AACA,SAAO;AACND,IAAAA,KAAK,EAAE;AACNC,MAAAA,MAAM,EAAE;AACPC,QAAAA,EAAE,EAAEkB,GAAG,CAACC,QAAJ,EADG;AAEPlB,QAAAA,KAFO;AAGPG,QAAAA,KAHO;AAIPD,QAAAA,OAJO;AAKPD,QAAAA;AALO;AADF;AADD,GAAP;AAWA,CAtBM;AAuBP,eAAeL,UAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nconst DetailPage = (props) => {\n\t// const details = ;\n\tconst { meetup } = props;\n\treturn (\n\t\t<MeetupDetails\n\t\t\tid={meetup.id}\n\t\t\ttitle={meetup.title}\n\t\t\tdescription={meetup.description}\n\t\t\taddress={meetup.address}\n\t\t\timage={meetup.image}\n\t\t/>\n\t);\n};\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://zedith9903:milestone0903@cluster0.bcm0h.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\tconst meetups = await meetupsCollection.find().toArray();\n\tconst paths = meetups.map((meetup) => ({\n\t\tparams: { meetupID: meetup._id.toString() },\n\t}));\n\treturn {\n\t\tpaths,\n\t\tfallback: false,\n\t};\n};\nexport const getStaticProps = async (ctx) => {\n\t// console.log(ctx.params.meetupID);\n\tconst meetupID = ctx.params.meetupID;\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://zedith9903:milestone0903@cluster0.bcm0h.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\tconst meetup = meetupsCollection.findOne({ _id: meetupID });\n\n\tconst { _id, title, image, address } = meetup;\n\treturn {\n\t\tprops: {\n\t\t\tmeetup: {\n\t\t\t\tid: _id.toString(),\n\t\t\t\ttitle,\n\t\t\t\timage,\n\t\t\t\taddress,\n\t\t\t\tdescription,\n\t\t\t},\n\t\t},\n\t};\n};\nexport default DetailPage;\n"]},"metadata":{},"sourceType":"module"}